trigger:
    branches:
      include:
      - main
    paths:
      include:
      - Shopping.API
      - aks/shoppingapi.yml

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '4f087ba0-5ba6-4650-891b-33b686237c27'
  imageRepository: 'shoppingapi'
  containerRegistry: 'shoppinglearningacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Shopping.API/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'shoppinglearningacr1584893c-auth'

pool:
  name: 'Default' 

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'Default'
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)

    - upload: aks
      artifact: aks

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: 'Default'
    environment: 'JulianEcheverriK8sAKSNET.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/aks/shoppingapi.yml               
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

